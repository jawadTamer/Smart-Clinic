{
  "info": {
    "_postman_id": "smart-clinic-api-collection",
    "name": "Smart Clinic API",
    "description": "üè• Smart Clinic Platform Overview\\n\\nThis platform is a comprehensive healthcare management system designed to streamline patient care, doctor scheduling, and clinic administration. It supports multiple user roles and provides tools for managing appointments, patient records, doctor schedules, and clinic operations.\\n\\n## üöÄ Core System Features\\n\\n### 1. Multi-Role User System\\n\\n#### User Types:\\n‚Ä¢ **Patient**: Can book appointments, view medical profile, update personal information\\n‚Ä¢ **Doctor**: Can manage schedule, view appointments, access patient profiles\\n‚Ä¢ **Admin**: Full system management permissions\\n\\n#### User Data:\\n‚Ä¢ **Basic Information**: Username, email, first name, last name\\n‚Ä¢ **Contact Details**: Phone number (Egyptian numbers only - 11 digits)\\n‚Ä¢ **Personal Data**: Date of birth, gender, address\\n‚Ä¢ **User Type**: Patient, doctor, or admin\\n\\n### 2. Doctor Management\\n\\n#### Doctor Information:\\n‚Ä¢ **Medical Specialization**: Cardiology, Dermatology, Neurology, Orthopedics, Pediatrics, Psychiatry, General, Dental, Eye, Surgery\\n‚Ä¢ **Professional Data**: License number, years of experience, consultation fee\\n‚Ä¢ **Biography**: Brief description of doctor's expertise\\n‚Ä¢ **Clinic**: Associated clinic information\\n\\n#### Doctor Schedule:\\n‚Ä¢ **Schedule Management**: Doctors can update working hours for each day\\n‚Ä¢ **Available Times**: Set start and end times for each day\\n‚Ä¢ **Availability Status**: Enable/disable doctor availability\\n\\n### 3. Patient Management\\n\\n#### Medical Profile:\\n‚Ä¢ **Medical History**: Previous and current medical conditions\\n‚Ä¢ **Allergies**: Substances the patient is allergic to\\n‚Ä¢ **Blood Type**: Patient's blood type\\n‚Ä¢ **Emergency Contact**: Name and phone number for emergency situations\\n\\n#### Access Permissions:\\n‚Ä¢ **Self Access**: Patients can only view and update their own profile\\n‚Ä¢ **Doctor Access**: Doctors can access all patient profiles\\n‚Ä¢ **Admin Access**: Admin has full permissions on all profiles\\n\\n### 4. Appointment System\\n\\n#### Booking Appointments:\\n‚Ä¢ **Browse Doctors**: View doctors by specialization\\n‚Ä¢ **Select Date & Time**: Choose from doctor's available slots\\n‚Ä¢ **Visit Reason**: Brief description of appointment purpose\\n‚Ä¢ **Appointment Status**: Pending, confirmed, cancelled, completed, no-show\\n\\n#### Appointment Management:\\n‚Ä¢ **For Patients**: View only their own appointments\\n‚Ä¢ **For Doctors**: View their appointments and update status\\n‚Ä¢ **For Admin**: Manage all appointments in the system\\n\\n### 5. Clinic Management\\n\\n#### Clinic Information:\\n‚Ä¢ **Basic Data**: Clinic name, address, phone, email\\n‚Ä¢ **Description**: Brief description of clinic and services\\n‚Ä¢ **Doctors**: List of doctors working at the clinic\\n\\n#### Permissions:\\n‚Ä¢ **Admin Only**: Add, update, delete clinics\\n‚Ä¢ **Read Access for All**: View clinic information\\n\\n### 6. Authentication & Security\\n\\n#### JWT Authentication:\\n‚Ä¢ **Access Token**: For API access (limited validity)\\n‚Ä¢ **Refresh Token**: To renew access tokens\\n‚Ä¢ **Request Protection**: All requests (except registration and login) require authentication\\n\\n#### Permission Verification:\\n‚Ä¢ **System-level Permissions**: Based on user type\\n‚Ä¢ **Object-level Permissions**: Access to personal data only\\n‚Ä¢ **Special Permissions**: Doctors can access patient profiles\\n\\n### 7. Data Validation\\n\\n#### Phone Number Validation:\\n‚Ä¢ **Length**: Must be exactly 11 digits\\n‚Ä¢ **Egyptian Numbers Only**: Supports local and international Egyptian numbers\\n‚Ä¢ **Valid Prefixes**: Validates number prefix correctness\\n\\n#### Appointment Validation:\\n‚Ä¢ **Availability**: Checks doctor availability at specified time\\n‚Ä¢ **Date**: Ensures appointment date is in the future\\n‚Ä¢ **Duplication**: Prevents double booking at same time\\n\\n### 8. API Features\\n\\n#### RESTful API:\\n‚Ä¢ **Standard Methods**: GET, POST, PUT, DELETE\\n‚Ä¢ **Unified Responses**: Consistent JSON format\\n‚Ä¢ **Status Codes**: Standard HTTP status codes\\n\\n#### Pagination & Filtering:\\n‚Ä¢ **Pagination**: Support for long lists\\n‚Ä¢ **Filtering**: Filter by specialization, date, status\\n‚Ä¢ **Search**: Ability to search through data\\n\\n### 9. Frontend Integration\\n\\n#### CORS Support:\\n‚Ä¢ **Angular Support**: CORS settings customized for frontend\\n‚Ä¢ **Cross-Origin Requests**: Support for requests from different domains\\n‚Ä¢ **Security**: Production-ready security settings\\n\\n#### Enhanced Responses:\\n‚Ä¢ **Data Formatting**: Format suitable for frontend\\n‚Ä¢ **Related Data**: Include related data in responses\\n‚Ä¢ **Clear Errors**: Clear and helpful error messages\\n\\n### 10. Production Settings\\n\\n#### Security:\\n‚Ä¢ **JWT Secrets**: Configurable secret keys\\n‚Ä¢ **CORS**: Security settings for cross-origin requests\\n‚Ä¢ **CSRF**: Protection against CSRF attacks\\n\\n#### Performance:\\n‚Ä¢ **Database**: PostgreSQL support for production\\n‚Ä¢ **Static Files**: Static and media file management\\n‚Ä¢ **Caching**: Caching settings\\n\\n#### Deployment:\\n‚Ä¢ **Environment Variables**: Configurable settings\\n‚Ä¢ **Docker**: Docker container support\\n‚Ä¢ **CI/CD**: Continuous integration/deployment support\\n\\n## üìã Key API Endpoints Summary\\n\\n#### Authentication:\\n‚Ä¢ `POST /auth/register/` - User registration\\n‚Ä¢ `POST /auth/login/` - User login\\n‚Ä¢ `POST /auth/token/refresh/` - Token refresh\\n‚Ä¢ `GET /users/me/` - Current user data\\n\\n#### Doctors:\\n‚Ä¢ `GET /doctors/` - List all doctors\\n‚Ä¢ `GET /doctors/{id}/` - Doctor details\\n‚Ä¢ `POST /doctors/schedule/create/` - Create new schedule\\n‚Ä¢ `PUT /doctors/schedule/{id}/` - Update schedule\\n‚Ä¢ `GET /doctors/{id}/schedules/` - Get doctor schedules\\n‚Ä¢ `GET /doctors/available/` - Available doctors\\n\\n#### Patients:\\n‚Ä¢ `GET /patients/me/` - Patient profile\\n‚Ä¢ `PUT /patients/me/` - Update profile\\n‚Ä¢ `GET /patients/{id}/` - Specific patient (doctors/admin)\\n\\n#### Appointments:\\n‚Ä¢ `GET /appointments/` - List appointments\\n‚Ä¢ `POST /appointments/create/` - Create appointment\\n‚Ä¢ `GET /appointments/{id}/` - Appointment details\\n‚Ä¢ `PUT /appointments/{id}/` - Update appointment\\n\\n#### Clinics:\\n‚Ä¢ `GET /clinics/` - List all active clinics (public access)\\n‚Ä¢ `POST /clinics/create/` - Create new clinic (public access)\\n‚Ä¢ `GET /admin/clinics/` - All clinics (admin only)\\n‚Ä¢ `POST /admin/clinics/` - Add clinic (admin only)\\n\\n#### Admin:\\n‚Ä¢ `GET /admin/users/` - All users\\n‚Ä¢ `GET /admin/clinics/` - All clinics\\n‚Ä¢ `POST /admin/clinics/` - Add clinic\\n\\n## üîê Authentication\\n\\nAll routes are protected by JWT authentication and role-based authorization.\\n\\n## üí° Usage Instructions\\n\\n1. **Start by registering a user or logging in**\\n2. **Use the returned JWT token in Authorization header**: `Bearer {{access_token}}`\\n3. **Access role-specific endpoints based on user type**\\n4. **Test all endpoints with different user roles**\\n5. **Verify permission restrictions work correctly**\\n\\n## üß™ Testing Guidelines\\n\\n‚Ä¢ **Use provided environment variables** for tokens and IDs\\n‚Ä¢ **Test all endpoints with different user roles**\\n‚Ä¢ **Verify permission restrictions** work correctly\\n‚Ä¢ **Test error scenarios** and validation\\n‚Ä¢ **Use sample data** for comprehensive testing\\n\\n## üìû Support\\n\\nFor any questions or issues, please contact the development team.\\n\\n## üîó Base URL\\n\\nProduction: `https://your-domain.com/api/`\\nDevelopment: `http://127.0.0.1:8000/api/`",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üîê Authentication",
      "description": "Authentication and user management endpoints for the Smart Clinic platform.\n\nThese endpoints handle user registration, login, token refresh, and profile management.\n\nüîë Key Features:\n‚Ä¢ User registration with role selection (patient/doctor)\n‚Ä¢ JWT-based authentication\n‚Ä¢ Token refresh mechanism\n‚Ä¢ User profile retrieval\n\nüìù Notes:\n‚Ä¢ Registration requires Egyptian phone number (11 digits)\n‚Ä¢ Passwords must meet security requirements\n‚Ä¢ User types determine access permissions",
      "item": [
        {
          "name": "Register User",
          "description": "üìù Register a new user in the Smart Clinic system\n\nThis endpoint allows new users to register as either patients or doctors.\n\nüéØ Access: Public (no authentication required)\n\nüìã Required Fields:\n‚Ä¢ username: Unique username for login\n‚Ä¢ email: Valid email address\n‚Ä¢ password: Secure password\n‚Ä¢ password2: Password confirmation\n‚Ä¢ first_name: User's first name\n‚Ä¢ last_name: User's last name\n‚Ä¢ user_type: 'patient' or 'doctor'\n‚Ä¢ phone: Egyptian phone number (11 digits)\n‚Ä¢ address: User's address\n‚Ä¢ date_of_birth: Birth date (YYYY-MM-DD)\n‚Ä¢ gender: 'M' for male, 'F' for female\n\n‚úÖ Validation:\n‚Ä¢ Phone number must be exactly 11 digits (Egyptian format)\n‚Ä¢ Passwords must match\n‚Ä¢ Email must be unique\n‚Ä¢ Username must be unique\n\nüîí Security:\n‚Ä¢ Password is hashed before storage\n‚Ä¢ User is automatically logged in after registration\n‚Ä¢ JWT tokens are returned for immediate access",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testpatient\",\n  \"email\": \"testpatient@example.com\",\n  \"password\": \"password123\",\n  \"password2\": \"password123\",\n  \"first_name\": \"ÿ£ÿ≠ŸÖÿØ\",\n  \"last_name\": \"ŸÖÿ≠ŸÖÿØ\",\n  \"user_type\": \"patient\",\n  \"phone\": \"01012345678\",\n  \"address\": \"ÿßŸÑŸÇÿßŸáÿ±ÿ©ÿå ŸÖÿµÿ±\",\n  \"date_of_birth\": \"1990-01-01\",\n  \"gender\": \"M\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register/",
              "host": ["{{base_url}}"],
              "path": ["auth", "register", ""]
            }
          }
        },
        {
          "name": "Login",
          "description": "üîë Authenticate user and get JWT tokens\n\nThis endpoint authenticates users and returns access and refresh tokens for API access.\n\nüéØ Access: Public (no authentication required)\n\nüìã Required Fields:\n‚Ä¢ username: User's username or email\n‚Ä¢ password: User's password\n\n‚úÖ Response:\n‚Ä¢ access_token: JWT token for API authentication\n‚Ä¢ refresh_token: Token for refreshing access token\n‚Ä¢ user: User profile information\n\nüîí Security:\n‚Ä¢ Tokens are automatically stored in environment variables\n‚Ä¢ Access token expires in 5 minutes\n‚Ä¢ Refresh token expires in 1 day\n\nüí° Usage:\n‚Ä¢ Use access_token in Authorization header: 'Bearer {{access_token}}'\n‚Ä¢ Use refresh_token to get new access token when expired",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testpatient\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login/",
              "host": ["{{base_url}}"],
              "path": ["auth", "login", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.tokens.access);",
                  "    pm.environment.set('refresh_token', response.tokens.refresh);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    pm.environment.set('user_type', response.user.user_type);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "description": "üîÑ Refresh expired access token\n\nThis endpoint allows users to get a new access token using their refresh token.\n\nüéØ Access: Public (requires valid refresh token)\n\nüìã Required Fields:\n‚Ä¢ refresh: Valid refresh token\n\n‚úÖ Response:\n‚Ä¢ access: New JWT access token\n\nüîí Security:\n‚Ä¢ New access token expires in 5 minutes\n‚Ä¢ Refresh token remains valid\n‚Ä¢ Old access token becomes invalid\n\nüí° Usage:\n‚Ä¢ Call this endpoint when access token expires (401 error)\n‚Ä¢ Update environment variable with new access token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/token/refresh/",
              "host": ["{{base_url}}"],
              "path": ["auth", "token", "refresh", ""]
            }
          }
        },
        {
          "name": "Get User Profile",
          "description": "üë§ Get current user's profile information\n\nThis endpoint returns the authenticated user's complete profile data.\n\nüéØ Access: Authenticated users only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{access_token}}\n\n‚úÖ Response:\n‚Ä¢ User profile with all details\n‚Ä¢ Role-specific information (patient/doctor/admin)\n‚Ä¢ Associated profile data\n\nüîí Security:\n‚Ä¢ Only returns current user's data\n‚Ä¢ Requires valid JWT token\n\nüí° Usage:\n‚Ä¢ Use to verify user authentication\n‚Ä¢ Get user role and permissions\n‚Ä¢ Retrieve profile for display/editing",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/me/",
              "host": ["{{base_url}}"],
              "path": ["users", "me", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üë®‚Äç‚öïÔ∏è Doctors",
      "description": "Doctor management and schedule endpoints for the Smart Clinic platform.\n\nThese endpoints handle doctor profiles, schedules, availability, and specializations.\n\nüîë Key Features:\n‚Ä¢ List all doctors with filtering\n‚Ä¢ Get doctor details and schedules\n‚Ä¢ Create new doctor schedules\n‚Ä¢ Update doctor schedules\n‚Ä¢ Check doctor availability\n‚Ä¢ Filter by specialization\n\nüìù Notes:\n‚Ä¢ Schedule creation and updates require doctor authentication\n‚Ä¢ Availability is checked in real-time\n‚Ä¢ Specialization filtering supports multiple criteria\n‚Ä¢ Each doctor can have only one schedule per day",
      "item": [
        {
          "name": "Get All Doctors",
          "description": "üìã Retrieve list of all available doctors\n\nThis endpoint returns all doctors in the system with optional filtering by specialization.\n\nüéØ Access: Public (no authentication required)\n\nüìã Query Parameters:\n‚Ä¢ specialization (optional): Filter by medical specialization\n\n‚úÖ Response:\n‚Ä¢ List of all doctors\n‚Ä¢ Basic doctor information\n‚Ä¢ Specialization and clinic details\n‚Ä¢ Availability status\n\nüîç Filtering:\n‚Ä¢ Use ?specialization=Cardiology for specific fields\n‚Ä¢ Multiple specializations supported\n‚Ä¢ Case-insensitive search\n\nüí° Usage:\n‚Ä¢ Use for doctor selection in appointment booking\n‚Ä¢ Filter by specialization for targeted search\n‚Ä¢ Check availability before booking",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/doctors/",
              "host": ["{{base_url}}"],
              "path": ["doctors", ""]
            }
          }
        },
        {
          "name": "Get Doctor Details",
          "description": "üë®‚Äç‚öïÔ∏è Get detailed information about a specific doctor\n\nThis endpoint returns comprehensive information about a doctor including their schedule, clinic, and contact details.\n\nüéØ Access: Public (no authentication required)\n\nüìã Path Parameters:\n‚Ä¢ id: Doctor's unique identifier\n\n‚úÖ Response:\n‚Ä¢ Complete doctor profile\n‚Ä¢ Schedule information\n‚Ä¢ Clinic details\n‚Ä¢ Contact information\n‚Ä¢ Specialization details\n\nüîç Information Included:\n‚Ä¢ Personal and professional details\n‚Ä¢ Working hours and availability\n‚Ä¢ Clinic location and contact\n‚Ä¢ License and qualifications\n\nüí° Usage:\n‚Ä¢ Display doctor profile to patients\n‚Ä¢ Show schedule for appointment booking\n‚Ä¢ Verify doctor credentials",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/doctors/{{doctor_id}}/",
              "host": ["{{base_url}}"],
              "path": ["doctors", "{{doctor_id}}", ""]
            }
          }
        },
        {
          "name": "Update Doctor Schedule",
          "description": "üìÖ Update doctor's working schedule\n\nThis endpoint allows doctors to modify their working hours and availability.\n\nüéØ Access: Doctor only (owner of the schedule)\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{doctor_access_token}}\n\nüìã Path Parameters:\n‚Ä¢ schedule_id: Schedule entry identifier\n\nüìã Body Fields:\n‚Ä¢ day: Day of week (Monday, Tuesday, etc.)\n‚Ä¢ start_time: Start time (HH:MM format)\n‚Ä¢ end_time: End time (HH:MM format)\n‚Ä¢ is_available: Boolean availability status\n\n‚úÖ Response:\n‚Ä¢ Updated schedule information\n‚Ä¢ Confirmation of changes\n\nüîí Security:\n‚Ä¢ Only schedule owner can update\n‚Ä¢ Validates time conflicts\n‚Ä¢ Ensures logical time ranges\n\nüí° Usage:\n‚Ä¢ Modify working hours\n‚Ä¢ Set availability status\n‚Ä¢ Update specific days\n‚Ä¢ Handle emergency closures",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{doctor_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": \"Monday\",\n  \"start_time\": \"09:00\",\n  \"end_time\": \"17:00\",\n  \"is_available\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/doctors/schedule/{{schedule_id}}/",
              "host": ["{{base_url}}"],
              "path": ["doctors", "schedule", "{{schedule_id}}", ""]
            }
          }
        },
        {
          "name": "Create Doctor Schedule",
          "description": "‚ûï Create a new schedule entry for a doctor\n\nThis endpoint allows doctors to add new schedule entries for their working hours.\n\nüéØ Access: Doctor only (authenticated doctor)\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{doctor_access_token}}\n‚Ä¢ Content-Type: application/json\n\nüìã Body Fields:\n‚Ä¢ day: Day of week (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)\n‚Ä¢ start_time: Start time (HH:MM format, 24-hour)\n‚Ä¢ end_time: End time (HH:MM format, 24-hour)\n‚Ä¢ is_available: Boolean availability status (true/false)\n\n‚úÖ Response:\n‚Ä¢ Created schedule information\n‚Ä¢ Schedule ID\n‚Ä¢ Confirmation of creation\n\nüîí Security:\n‚Ä¢ Only authenticated doctors can create schedules\n‚Ä¢ Schedule is automatically linked to authenticated doctor\n‚Ä¢ Prevents duplicate schedules for same day\n‚Ä¢ Validates time ranges\n\nüí° Usage:\n‚Ä¢ Add new working days\n‚Ä¢ Set initial schedule\n‚Ä¢ Expand availability\n‚Ä¢ Configure working hours\n\n‚ö†Ô∏è Validation:\n‚Ä¢ Each doctor can have only one schedule per day\n‚Ä¢ End time must be after start time\n‚Ä¢ Time format must be HH:MM (24-hour)\n‚Ä¢ Day must be valid weekday name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{doctor_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": \"Monday\",\n  \"start_time\": \"09:00\",\n  \"end_time\": \"17:00\",\n  \"is_available\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/doctors/schedule/create/",
              "host": ["{{base_url}}"],
              "path": ["doctors", "schedule", "create", ""]
            }
          }
        },
        {
          "name": "Get Available Doctors",
          "description": "üîç Find doctors available at specific date and time\n\nThis endpoint helps patients find doctors who are available for appointments at a given time.\n\nüéØ Access: Public (no authentication required)\n\nüìã Query Parameters:\n‚Ä¢ date (optional): Appointment date (YYYY-MM-DD)\n‚Ä¢ time (optional): Appointment time (HH:MM)\n\n‚úÖ Response:\n‚Ä¢ List of available doctors\n‚Ä¢ Filtered by date/time availability\n‚Ä¢ Excludes already booked slots\n\nüîç Filtering Logic:\n‚Ä¢ Checks doctor schedules\n‚Ä¢ Excludes existing appointments\n‚Ä¢ Considers working hours\n‚Ä¢ Validates availability status\n\nüí° Usage:\n‚Ä¢ Search for available doctors\n‚Ä¢ Check specific time slots\n‚Ä¢ Plan appointment booking\n‚Ä¢ Verify doctor availability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/doctors/available/?date=2024-01-15&time=10:00",
              "host": ["{{base_url}}"],
              "path": ["doctors", "available", ""],
              "query": [
                {
                  "key": "date",
                  "value": "2024-01-15"
                },
                {
                  "key": "time",
                  "value": "10:00"
                }
              ]
            }
          }
        },
        {
          "name": "Get Doctor Schedules",
          "description": "üìÖ Retrieve all schedules for a specific doctor\n\nThis endpoint returns the complete schedule information for a doctor including all working days and times.\n\nüéØ Access: Public (no authentication required)\n\nüìã Path Parameters:\n‚Ä¢ doctor_id: Doctor's unique identifier\n\n‚úÖ Response:\n‚Ä¢ Complete schedule list\n‚Ä¢ Day-wise availability\n‚Ä¢ Time slots and status\n‚Ä¢ Working hours details\n\nüîç Schedule Information:\n‚Ä¢ All days of the week\n‚Ä¢ Start and end times\n‚Ä¢ Availability status\n‚Ä¢ Schedule conflicts\n\nüí° Usage:\n‚Ä¢ Display doctor's full schedule\n‚Ä¢ Check working hours\n‚Ä¢ Plan appointments\n‚Ä¢ Verify availability patterns",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/doctors/{{doctor_id}}/schedules/",
              "host": ["{{base_url}}"],
              "path": ["doctors", "{{doctor_id}}", "schedules", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Patients",
      "description": "Patient management and profile endpoints for the Smart Clinic platform.\n\nThese endpoints handle patient profiles, medical history, and profile updates.\n\nüîë Key Features:\n‚Ä¢ Get patient profile (own or by ID)\n‚Ä¢ Update patient information\n‚Ä¢ View medical history\n‚Ä¢ Emergency contact management\n‚Ä¢ Profile access control\n\nüìù Notes:\n‚Ä¢ Patients can only access their own profile\n‚Ä¢ Doctors and admins can access any patient profile\n‚Ä¢ Medical history is protected and confidential",
      "item": [
        {
          "name": "Get Patient Profile",
          "description": "üë§ Get current patient's profile information\n\nThis endpoint returns the authenticated patient's complete profile including medical history.\n\nüéØ Access: Patient (own profile), Doctor/Admin (any patient)\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{access_token}}\n\nüìã Query Parameters (for doctors/admins):\n‚Ä¢ patient_id (optional): Specific patient ID to retrieve\n\n‚úÖ Response:\n‚Ä¢ Complete patient profile\n‚Ä¢ Medical history\n‚Ä¢ Emergency contacts\n‚Ä¢ Personal information\n\nüîí Security:\n‚Ä¢ Patients see only their own profile\n‚Ä¢ Doctors/Admins can access any patient\n‚Ä¢ Medical data is protected\n\nüí° Usage:\n‚Ä¢ Display patient information\n‚Ä¢ Access medical history\n‚Ä¢ Update profile data\n‚Ä¢ Emergency contact lookup",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/patients/me/",
              "host": ["{{base_url}}"],
              "path": ["patients", "me", ""]
            }
          }
        },
        {
          "name": "Update Patient Profile",
          "description": "‚úèÔ∏è Update patient's profile information\n\nThis endpoint allows patients to modify their personal and medical information.\n\nüéØ Access: Patient only (own profile)\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{patient_access_token}}\n‚Ä¢ Content-Type: application/json\n\nüìã Body Fields:\n‚Ä¢ first_name: Patient's first name\n‚Ä¢ last_name: Patient's last name\n‚Ä¢ phone: Egyptian phone number (11 digits)\n‚Ä¢ address: Current address\n‚Ä¢ date_of_birth: Birth date\n‚Ä¢ gender: Gender (M/F)\n‚Ä¢ medical_history: Medical background\n‚Ä¢ emergency_contact: Emergency contact number\n\n‚úÖ Response:\n‚Ä¢ Updated patient profile\n‚Ä¢ Confirmation of changes\n\nüîí Security:\n‚Ä¢ Only profile owner can update\n‚Ä¢ Phone number validation\n‚Ä¢ Data integrity checks\n\nüí° Usage:\n‚Ä¢ Update personal information\n‚Ä¢ Modify medical history\n‚Ä¢ Change contact details\n‚Ä¢ Update emergency contacts",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{patient_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"ÿ£ÿ≠ŸÖÿØ\",\n  \"last_name\": \"ŸÖÿ≠ŸÖÿØ\",\n  \"phone\": \"01012345678\",\n  \"address\": \"ÿßŸÑŸÇÿßŸáÿ±ÿ© ÿßŸÑÿ¨ÿØŸäÿØÿ©ÿå ŸÖÿµÿ±\",\n  \"date_of_birth\": \"1990-01-01\",\n  \"gender\": \"M\",\n  \"medical_history\": \"ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ£ŸÖÿ±ÿßÿ∂ ŸÖÿ≤ŸÖŸÜÿ©\",\n  \"emergency_contact\": \"01098765432\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/patients/me/",
              "host": ["{{base_url}}"],
              "path": ["patients", "me", ""]
            }
          }
        },
        {
          "name": "Get Patient Detail (Doctor/Admin)",
          "description": "üë• Get specific patient profile (for doctors and admins)\n\nThis endpoint allows doctors and admins to retrieve detailed information about any patient.\n\nüéØ Access: Doctor/Admin only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{doctor_access_token}} or {{admin_access_token}}\n\nüìã Path Parameters:\n‚Ä¢ id: Patient's unique identifier\n\n‚úÖ Response:\n‚Ä¢ Complete patient profile\n‚Ä¢ Medical history\n‚Ä¢ Emergency contacts\n‚Ä¢ Appointment history\n\nüîí Security:\n‚Ä¢ Only doctors and admins can access\n‚Ä¢ Full patient information\n‚Ä¢ Confidential medical data\n\nüí° Usage:\n‚Ä¢ Doctor consultation preparation\n‚Ä¢ Admin patient management\n‚Ä¢ Medical record review\n‚Ä¢ Emergency contact access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{doctor_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/patients/{{patient_id}}/",
              "host": ["{{base_url}}"],
              "path": ["patients", "{{patient_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üè• Clinics",
      "description": "Clinic management and access endpoints for the Smart Clinic platform.\n\nThese endpoints handle clinic information, public access, and administrative management.\n\nüîë Key Features:\n‚Ä¢ Public access to active clinics\n‚Ä¢ Clinic information and details\n‚Ä¢ Administrative clinic management\n‚Ä¢ Location and contact information\n\nüìù Notes:\n‚Ä¢ Public endpoints require no authentication\n‚Ä¢ Admin endpoints require admin access\n‚Ä¢ Only active clinics are publicly visible\n‚Ä¢ Full clinic management for administrators",
      "item": [
        {
          "name": "Get All Active Clinics (Public)",
          "description": "üè• Retrieve all active clinics (public access)\n\nThis endpoint returns all active clinics in the system. Anyone can access this endpoint without authentication.\n\nüéØ Access: Public (no authentication required)\n\n‚úÖ Response:\n‚Ä¢ List of all active clinics\n‚Ä¢ Clinic details and contact info\n‚Ä¢ Location information\n‚Ä¢ Operating status\n\nüîç Information Included:\n‚Ä¢ Clinic name and description\n‚Ä¢ Address and contact details\n‚Ä¢ Phone and email\n‚Ä¢ Active status\n‚Ä¢ Creation and update dates\n\nüí° Usage:\n‚Ä¢ Browse available clinics\n‚Ä¢ Doctor registration selection\n‚Ä¢ Public clinic directory\n‚Ä¢ Location-based search\n\nüîí Security:\n‚Ä¢ No authentication required\n‚Ä¢ Only active clinics shown\n‚Ä¢ Public information only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/clinics/",
              "host": ["{{base_url}}"],
              "path": ["clinics", ""]
            }
          }
        },
        {
          "name": "Create Clinic (Public)",
          "description": "‚ûï Create a new clinic (public access for doctor registration)\n\nThis endpoint allows anyone to create a new clinic, typically used during doctor registration.\n\nüéØ Access: Public (no authentication required)\n\nüìã Body Fields:\n‚Ä¢ name: Clinic name\n‚Ä¢ address: Physical address\n‚Ä¢ phone: Egyptian phone number (11 digits)\n‚Ä¢ email: Contact email\n‚Ä¢ description: Clinic description (optional)\n\n‚úÖ Response:\n‚Ä¢ Created clinic details\n‚Ä¢ Confirmation message\n‚Ä¢ Clinic ID\n\nüîí Security:\n‚Ä¢ No authentication required\n‚Ä¢ Data validation\n‚Ä¢ Phone number verification\n\nüí° Usage:\n‚Ä¢ Doctor registration process\n‚Ä¢ New clinic registration\n‚Ä¢ System expansion\n‚Ä¢ Public clinic addition",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"ÿπŸäÿßÿØÿ© ÿßŸÑŸÇŸÑÿ® ÿßŸÑŸÖÿ™ÿÆÿµÿµÿ©\",\n  \"address\": \"ÿ¥ÿßÿ±ÿπ ÿßŸÑŸÜŸäŸÑÿå ÿßŸÑŸÇÿßŸáÿ±ÿ©ÿå ŸÖÿµÿ±\",\n  \"phone\": \"02234567890\",\n  \"email\": \"info@heartclinic.com\",\n  \"description\": \"ÿπŸäÿßÿØÿ© ŸÖÿ™ÿÆÿµÿµÿ© ŸÅŸä ÿ£ŸÖÿ±ÿßÿ∂ ÿßŸÑŸÇŸÑÿ® ŸàÿßŸÑÿ£ŸàÿπŸäÿ© ÿßŸÑÿØŸÖŸàŸäÿ©\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/clinics/create/",
              "host": ["{{base_url}}"],
              "path": ["clinics", "create", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üìÖ Appointments",
      "description": "Appointment management endpoints for the Smart Clinic platform.\n\nThese endpoints handle appointment booking, viewing, and status updates.\n\nüîë Key Features:\n‚Ä¢ Book new appointments (patients only)\n‚Ä¢ View appointments by role\n‚Ä¢ Update appointment status\n‚Ä¢ Check appointment details\n‚Ä¢ Role-based access control\n\nüìù Notes:\n‚Ä¢ Only patients can create appointments\n‚Ä¢ Doctors can update appointment status\n‚Ä¢ Admins have full access to all appointments",
      "item": [
        {
          "name": "Create Appointment",
          "description": "üìù Book a new appointment with a doctor\n\nThis endpoint allows patients to schedule appointments with available doctors.\n\nüéØ Access: Patient only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{patient_access_token}}\n‚Ä¢ Content-Type: application/json\n\nüìã Body Fields:\n‚Ä¢ doctor: Doctor's ID\n‚Ä¢ appointment_date: Date (YYYY-MM-DD)\n‚Ä¢ appointment_time: Time (HH:MM)\n‚Ä¢ reason: Reason for visit\n‚Ä¢ description: Additional details\n\n‚úÖ Response:\n‚Ä¢ Created appointment details\n‚Ä¢ Confirmation message\n‚Ä¢ Appointment ID\n\nüîí Security:\n‚Ä¢ Only patients can create appointments\n‚Ä¢ Validates doctor availability\n‚Ä¢ Checks for time conflicts\n‚Ä¢ Ensures valid date/time\n\nüí° Usage:\n‚Ä¢ Schedule medical consultations\n‚Ä¢ Book follow-up appointments\n‚Ä¢ Emergency appointments\n‚Ä¢ Regular check-ups",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{patient_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"doctor\": \"{{doctor_id}}\",\n  \"appointment_date\": \"2024-01-15\",\n  \"appointment_time\": \"10:00\",\n  \"reason\": \"ÿßÿ≥ÿ™ÿ¥ÿßÿ±ÿ© ÿ∑ÿ®Ÿäÿ©\",\n  \"description\": \"ÿ£ÿ¥ÿπÿ± ÿ®ÿ£ŸÑŸÖ ŸÅŸä ÿßŸÑÿµÿØÿ±\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/appointments/create/",
              "host": ["{{base_url}}"],
              "path": ["appointments", "create", ""]
            }
          }
        },
        {
          "name": "Get Appointments",
          "description": "üìã Retrieve appointments based on user role\n\nThis endpoint returns appointments according to the user's role and permissions.\n\nüéØ Access: Authenticated users (role-based)\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{access_token}}\n\n‚úÖ Response by Role:\n‚Ä¢ Patient: Own appointments only\n‚Ä¢ Doctor: Own appointments only\n‚Ä¢ Admin: All appointments\n\nüîç Information Included:\n‚Ä¢ Appointment details\n‚Ä¢ Patient and doctor info\n‚Ä¢ Date and time\n‚Ä¢ Status and reason\n\nüîí Security:\n‚Ä¢ Role-based filtering\n‚Ä¢ Patient sees only their appointments\n‚Ä¢ Doctor sees only their appointments\n‚Ä¢ Admin sees all appointments\n\nüí° Usage:\n‚Ä¢ View upcoming appointments\n‚Ä¢ Check appointment history\n‚Ä¢ Manage daily schedule\n‚Ä¢ Track appointment status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/appointments/",
              "host": ["{{base_url}}"],
              "path": ["appointments", ""]
            }
          }
        },
        {
          "name": "Get Appointment Detail",
          "description": "üîç Get detailed information about a specific appointment\n\nThis endpoint returns comprehensive details about an appointment including patient and doctor information.\n\nüéØ Access: Appointment owner, assigned doctor, or admin\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{access_token}}\n\nüìã Path Parameters:\n‚Ä¢ id: Appointment's unique identifier\n\n‚úÖ Response:\n‚Ä¢ Complete appointment details\n‚Ä¢ Patient information\n‚Ä¢ Doctor information\n‚Ä¢ Status and notes\n‚Ä¢ Date and time details\n\nüîí Security:\n‚Ä¢ Patient can see their own appointments\n‚Ä¢ Doctor can see assigned appointments\n‚Ä¢ Admin can see all appointments\n\nüí° Usage:\n‚Ä¢ Review appointment details\n‚Ä¢ Prepare for consultation\n‚Ä¢ Update appointment status\n‚Ä¢ Access patient information",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}/",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}", ""]
            }
          }
        },
        {
          "name": "Update Appointment Status",
          "description": "‚úèÔ∏è Update appointment status and notes\n\nThis endpoint allows doctors and admins to update appointment status and add notes.\n\nüéØ Access: Assigned doctor or admin\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{doctor_access_token}} or {{admin_access_token}}\n‚Ä¢ Content-Type: application/json\n\nüìã Path Parameters:\n‚Ä¢ id: Appointment's unique identifier\n\nüìã Body Fields:\n‚Ä¢ status: New status (pending, confirmed, completed, cancelled)\n‚Ä¢ notes: Doctor's notes\n\n‚úÖ Response:\n‚Ä¢ Updated appointment details\n‚Ä¢ Confirmation of changes\n\nüîí Security:\n‚Ä¢ Only assigned doctor or admin can update\n‚Ä¢ Status validation\n‚Ä¢ Audit trail maintained\n\nüí° Usage:\n‚Ä¢ Confirm appointments\n‚Ä¢ Add consultation notes\n‚Ä¢ Cancel appointments\n‚Ä¢ Mark as completed",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{doctor_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"notes\": \"ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑŸÖŸàÿπÿØ. Ÿäÿ±ÿ¨Ÿâ ÿßŸÑÿ≠ÿ∂Ÿàÿ± ŸÇÿ®ŸÑ 10 ÿØŸÇÿßÿ¶ŸÇ\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}/",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üè• Admin Panel",
      "description": "Administrative endpoints for the Smart Clinic platform.\n\nThese endpoints provide full system management capabilities for administrators.\n\nüîë Key Features:\n‚Ä¢ User management (view all users)\n‚Ä¢ Clinic management (CRUD operations)\n‚Ä¢ System-wide appointment access\n‚Ä¢ Administrative oversight\n‚Ä¢ Full platform control\n\nüìù Notes:\n‚Ä¢ Admin access required for all endpoints\n‚Ä¢ Full CRUD operations on clinics\n‚Ä¢ Complete user visibility\n‚Ä¢ System-wide appointment management",
      "item": [
        {
          "name": "Get All Users",
          "description": "üë• Retrieve all users in the system\n\nThis endpoint returns a complete list of all users including patients, doctors, and admins.\n\nüéØ Access: Admin only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{admin_access_token}}\n\n‚úÖ Response:\n‚Ä¢ Complete user list\n‚Ä¢ User types and roles\n‚Ä¢ Profile information\n‚Ä¢ Account status\n\nüîç User Information:\n‚Ä¢ Personal details\n‚Ä¢ Contact information\n‚Ä¢ Account status\n‚Ä¢ Role and permissions\n‚Ä¢ Registration date\n\nüîí Security:\n‚Ä¢ Admin access only\n‚Ä¢ Sensitive data protection\n‚Ä¢ Role-based information\n\nüí° Usage:\n‚Ä¢ User management\n‚Ä¢ Account monitoring\n‚Ä¢ Role administration\n‚Ä¢ System overview",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users/",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", ""]
            }
          }
        },
        {
          "name": "Get All Clinics",
          "description": "üè• Retrieve all clinics in the system\n\nThis endpoint returns a complete list of all registered clinics with their details.\n\nüéØ Access: Admin only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{admin_access_token}}\n\n‚úÖ Response:\n‚Ä¢ Complete clinic list\n‚Ä¢ Clinic details and contact info\n‚Ä¢ Location information\n‚Ä¢ Operating hours\n\nüîç Clinic Information:\n‚Ä¢ Name and description\n‚Ä¢ Address and contact\n‚Ä¢ Operating hours\n‚Ä¢ Services offered\n‚Ä¢ Staff information\n\nüîí Security:\n‚Ä¢ Admin access only\n‚Ä¢ Complete clinic data\n‚Ä¢ Management capabilities\n\nüí° Usage:\n‚Ä¢ Clinic management\n‚Ä¢ Location overview\n‚Ä¢ Service coordination\n‚Ä¢ Administrative oversight",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/clinics/",
              "host": ["{{base_url}}"],
              "path": ["admin", "clinics", ""]
            }
          }
        },
        {
          "name": "Add Clinic",
          "description": "‚ûï Create a new clinic in the system\n\nThis endpoint allows admins to register new clinics with complete information.\n\nüéØ Access: Admin only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{admin_access_token}}\n‚Ä¢ Content-Type: application/json\n\nüìã Body Fields:\n‚Ä¢ name: Clinic name\n‚Ä¢ description: Clinic description\n‚Ä¢ address: Physical address\n‚Ä¢ phone: Egyptian phone number (11 digits)\n‚Ä¢ email: Contact email\n‚Ä¢ website: Clinic website (optional)\n‚Ä¢ operating_hours: Working hours\n\n‚úÖ Response:\n‚Ä¢ Created clinic details\n‚Ä¢ Confirmation message\n‚Ä¢ Clinic ID\n\nüîí Security:\n‚Ä¢ Admin access only\n‚Ä¢ Data validation\n‚Ä¢ Phone number verification\n\nüí° Usage:\n‚Ä¢ Register new clinics\n‚Ä¢ Expand clinic network\n‚Ä¢ Update clinic database\n‚Ä¢ Administrative setup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"ÿπŸäÿßÿØÿ© ÿßŸÑŸÇŸÑÿ® ÿßŸÑŸÖÿ™ÿÆÿµÿµÿ©\",\n  \"description\": \"ÿπŸäÿßÿØÿ© ŸÖÿ™ÿÆÿµÿµÿ© ŸÅŸä ÿ£ŸÖÿ±ÿßÿ∂ ÿßŸÑŸÇŸÑÿ® ŸàÿßŸÑÿ£ŸàÿπŸäÿ© ÿßŸÑÿØŸÖŸàŸäÿ©\",\n  \"address\": \"ÿ¥ÿßÿ±ÿπ ÿßŸÑŸÜŸäŸÑÿå ÿßŸÑŸÇÿßŸáÿ±ÿ©ÿå ŸÖÿµÿ±\",\n  \"phone\": \"02234567890\",\n  \"email\": \"info@heartclinic.com\",\n  \"website\": \"https://heartclinic.com\",\n  \"operating_hours\": \"ÿßŸÑÿ£ÿ≠ÿØ - ÿßŸÑÿÆŸÖŸäÿ≥: 9:00 ÿµ - 5:00 ŸÖ\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/clinics/",
              "host": ["{{base_url}}"],
              "path": ["admin", "clinics", ""]
            }
          }
        },
        {
          "name": "Update Clinic",
          "description": "‚úèÔ∏è Update existing clinic information\n\nThis endpoint allows admins to modify clinic details and information.\n\nüéØ Access: Admin only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{admin_access_token}}\n‚Ä¢ Content-Type: application/json\n\nüìã Path Parameters:\n‚Ä¢ id: Clinic's unique identifier\n\nüìã Body Fields:\n‚Ä¢ name: Updated clinic name\n‚Ä¢ description: Updated description\n‚Ä¢ address: Updated address\n‚Ä¢ phone: Updated phone number\n‚Ä¢ email: Updated email\n‚Ä¢ website: Updated website\n‚Ä¢ operating_hours: Updated hours\n\n‚úÖ Response:\n‚Ä¢ Updated clinic details\n‚Ä¢ Confirmation of changes\n\nüîí Security:\n‚Ä¢ Admin access only\n‚Ä¢ Data validation\n‚Ä¢ Change tracking\n\nüí° Usage:\n‚Ä¢ Update clinic information\n‚Ä¢ Modify contact details\n‚Ä¢ Change operating hours\n‚Ä¢ Administrative maintenance",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"ÿπŸäÿßÿØÿ© ÿßŸÑŸÇŸÑÿ® ÿßŸÑŸÖÿ™ÿÆÿµÿµÿ© - ŸÅÿ±ÿπ ÿßŸÑÿ¨Ÿäÿ≤ÿ©\",\n  \"description\": \"ŸÅÿ±ÿπ ÿ¨ÿØŸäÿØ ŸÅŸä ÿßŸÑÿ¨Ÿäÿ≤ÿ© ŸÖÿ™ÿÆÿµÿµ ŸÅŸä ÿ£ŸÖÿ±ÿßÿ∂ ÿßŸÑŸÇŸÑÿ®\",\n  \"address\": \"ÿ¥ÿßÿ±ÿπ ÿßŸÑŸáÿ±ŸÖÿå ÿßŸÑÿ¨Ÿäÿ≤ÿ©ÿå ŸÖÿµÿ±\",\n  \"phone\": \"02345678901\",\n  \"email\": \"giza@heartclinic.com\",\n  \"website\": \"https://heartclinic.com/giza\",\n  \"operating_hours\": \"ÿßŸÑÿ£ÿ≠ÿØ - ÿßŸÑÿÆŸÖŸäÿ≥: 8:00 ÿµ - 6:00 ŸÖ\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/clinics/{{clinic_id}}/",
              "host": ["{{base_url}}"],
              "path": ["admin", "clinics", "{{clinic_id}}", ""]
            }
          }
        },
        {
          "name": "Delete Clinic",
          "description": "üóëÔ∏è Remove a clinic from the system\n\nThis endpoint allows admins to delete clinics that are no longer active.\n\nüéØ Access: Admin only\n\nüìã Headers Required:\n‚Ä¢ Authorization: Bearer {{admin_access_token}}\n\nüìã Path Parameters:\n‚Ä¢ id: Clinic's unique identifier\n\n‚úÖ Response:\n‚Ä¢ Deletion confirmation\n‚Ä¢ Success message\n\nüîí Security:\n‚Ä¢ Admin access only\n‚Ä¢ Confirmation required\n‚Ä¢ Data cleanup\n\n‚ö†Ô∏è Warning:\n‚Ä¢ This action is irreversible\n‚Ä¢ Associated data may be affected\n‚Ä¢ Consider deactivation instead\n\nüí° Usage:\n‚Ä¢ Remove inactive clinics\n‚Ä¢ System cleanup\n‚Ä¢ Administrative maintenance\n‚Ä¢ Data management",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/clinics/{{clinic_id}}/",
              "host": ["{{base_url}}"],
              "path": ["admin", "clinics", "{{clinic_id}}", ""]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://your-domain.com/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_type",
      "value": "",
      "type": "string"
    },
    {
      "key": "doctor_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "patient_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "appointment_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "clinic_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "schedule_id",
      "value": "",
      "type": "string"
    }
  ]
}
